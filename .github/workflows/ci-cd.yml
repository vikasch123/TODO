name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: project/package-lock.json # Set correct path for caching

    - name: Install dependencies
      run: |
        if [ -f project/package-lock.json ]; then
          npm ci
        else
          npm install --no-audit --no-fund
        fi
      working-directory: project  # Ensure npm runs in the correct directory

    - name: Lint code
      run: npm run lint
      working-directory: project  # Ensure linting runs inside the correct directory
      
    - name: Build application
      run: npm run build
      working-directory: project  # Ensure build runs inside the correct directory
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: project/dist/  # Ensure the correct path is used
        
  deploy:
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: project/dist  # Ensure the downloaded path matches the correct build directory
        
    - name: Install Netlify CLI
      run: npm install -g netlify-cli

    - name: Deploy to Netlify
      run: netlify deploy --dir=project/dist --prod  # Use correct path for deployment
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
